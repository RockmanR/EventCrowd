{
  "contractName": "MyCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getEscrowAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeToCloseContract",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStartStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "startTime_",
          "type": "uint256"
        },
        {
          "name": "closingTime_",
          "type": "uint256"
        }
      ],
      "name": "setTime",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "escrow",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeToStartContract",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner_",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCloseStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061013e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063122fd48a146101495780631515bc2b146101a05780632c4e722e146101cf57806340193883146101fa5780634042b66f146102255780634b6753bc146102505780634bb278f31461027b578063521eb273146102925780635c56303d146102e9578063715018a614610314578063796843731461032b5780637d3d65221461035a5780638d4e4083146103895780638da5cb5b146103b8578063a0355eca1461040f578063b5545a3c14610446578063b7a8807c1461045d578063e2fdcc1714610488578063e3dad525146104df578063e76630791461050a578063eae3027414610561578063ec8ac4d814610590578063f2fde38b146105c6578063fc0c546a14610609575b61014733610660565b005b34801561015557600080fd5b5061015e61072e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ac57600080fd5b506101b5610758565b604051808215151515815260200191505060405180910390f35b3480156101db57600080fd5b506101e4610764565b6040518082815260200191505060405180910390f35b34801561020657600080fd5b5061020f61076a565b6040518082815260200191505060405180910390f35b34801561023157600080fd5b5061023a610770565b6040518082815260200191505060405180910390f35b34801561025c57600080fd5b50610265610776565b6040518082815260200191505060405180910390f35b34801561028757600080fd5b5061029061077c565b005b34801561029e57600080fd5b506102a7610858565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f557600080fd5b506102fe61087e565b6040518082815260200191505060405180910390f35b34801561032057600080fd5b506103296108a3565b005b34801561033757600080fd5b506103406109a8565b604051808215151515815260200191505060405180910390f35b34801561036657600080fd5b5061036f6109d0565b604051808215151515815260200191505060405180910390f35b34801561039557600080fd5b5061039e6109df565b604051808215151515815260200191505060405180910390f35b3480156103c457600080fd5b506103cd6109f2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561041b57600080fd5b506104446004803603810190808035906020019092919080359060200190929190505050610a18565b005b34801561045257600080fd5b5061045b610a2e565b005b34801561046957600080fd5b50610472610c0c565b6040518082815260200191505060405180910390f35b34801561049457600080fd5b5061049d610c12565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104eb57600080fd5b506104f4610c38565b6040518082815260200191505060405180910390f35b34801561051657600080fd5b5061051f610c5d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561056d57600080fd5b50610576610c83565b604051808215151515815260200191505060405180910390f35b6105c4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610660565b005b3480156105d257600080fd5b50610607600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cab565b005b34801561061557600080fd5b5061061e610d13565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506106708383610d38565b61067982610d65565b905061069082600354610d8390919063ffffffff16565b6003819055506106a08382610d9f565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a36107178383610dad565b61071f610db1565b6107298383610e89565b505050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006005544211905090565b60025481565b60075481565b60035481565b60055481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107d857600080fd5b600660149054906101000a900460ff161515156107f457600080fd5b6107fc610758565b151561080757600080fd5b61080f610e8d565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600660146101000a81548160ff021916908315150217905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080426005541115610897574260055403905061089c565b600090505b8091505090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108ff57600080fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060006109b5610c38565b14156109c457600190506109c9565b600090505b8091505090565b60006007546003541015905090565b600660149054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8142016004819055508042016005819055505050565b610a36611084565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636192b292600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610b3157600080fd5b505af1158015610b45573d6000803e3d6000fd5b505050506040513d6020811015610b5b57600080fd5b8101908080519060200190929190505050336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610bf257600080fd5b505af1158015610c06573d6000803e3d6000fd5b50505050565b60045481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080426004541115610c515742600454039050610c56565b600090505b8091505090565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000610c9061087e565b1415610c9f5760019050610ca4565b600090505b8091505090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d0757600080fd5b610d108161118a565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004544210158015610d4c57506005544211155b1515610d5757600080fd5b610d618282611286565b5050565b6000610d7c600254836112d690919063ffffffff16565b9050919050565b60008183019050828110151515610d9657fe5b80905092915050565b610da9828261130e565b5050565b5050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610e6e57600080fd5b505af1158015610e82573d6000803e3d6000fd5b5050505050565b5050565b610e956109d0565b15610fdb57600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610f2057600080fd5b505af1158015610f34573d6000803e3d6000fd5b50505050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610fbe57600080fd5b505af1158015610fd2573d6000803e3d6000fd5b5050505061107a565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561106157600080fd5b505af1158015611075573d6000803e3d6000fd5b505050505b61108261141c565b565b600660149054906101000a900460ff16151561109f57600080fd5b6110a76109d0565b1515156110b357600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561117057600080fd5b505af1158015611184573d6000803e3d6000fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156111c657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112c257600080fd5b600081141515156112d257600080fd5b5050565b6000808314156112e95760009050611308565b81830290508183828115156112fa57fe5b0414151561130457fe5b8090505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156113d257600080fd5b505af11580156113e6573d6000803e3d6000fd5b505050506040513d60208110156113fc57600080fd5b8101908080519060200190929190505050151561141857600080fd5b5050565b5600a165627a7a723058202dffef5c97423dbf6e90bb5e3e4882aba7a51c208ff8a64bda8c1f39bb4b604f0029",
  "sourceMap": "373:560:2:-;;;384:5:6;358:31;;;;;;;;;;;;;;;;;;;;1458:10:3;1440:28;;;;;;;;;;;;;;;;;;;;1515:9;1503;1497:3;:15;:27;1474:50;;1580:9;1568;1553:12;;:24;:36;1530:59;;1611:3;1595:19;;1632:7;1620:19;;863:68:2;8:9:-1;5:2;;;30:1;27;20:12;5:2;863:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:6;1876::3;1844:4;;1788:12;;1802;;1741:5;;1748:7;;;;;;;;;;;1757:6;2020:1:5;2012:5;:9;2004:18;;;;;;;;2055:1;2036:21;;:7;:21;;;;2028:30;;;;;;;;2090:1;2072:20;;:6;:20;;;;2064:29;;;;;;;;2107:5;2100:4;:12;;;;2127:7;2118:6;;:16;;;;;;;;;;;;;;;;;;2148:6;2140:5;;:14;;;;;;;;;;;;;;;;;;1933:226;;;886:15:9;870:12;:31;;862:40;;;;;;;;932:12;916;:28;;908:37;;;;;;;;966:12;952:11;:26;;;;998:12;984:11;:26;;;;735:280;;575:10:11;567:5;;:18;;;;;;;;;;;;;;;;;;784:1:7;776:5;:9;768:18;;;;;;;;818:6;;;;;;;;;;;801:24;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;801:24:7;792:6;;:33;;;;;;;;;;;;;;;;;;838:5;831:4;:12;;;;728:120;970:6:0;962:5;;:14;;;;;;;;;;;;;;;;;;866:121;1912:10:3;1903:6;;:19;;;;;;;;;;;;;;;;;;1646:287;863:68:2;373:560;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "373:560:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2389:21:5;2399:10;2389:9;:21::i;:::-;373:560:2;3016:101:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3016:101:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:153:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1169:153:9;;;;;;;;;;;;;;;;;;;;;;;;;;;1302:19:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1302:19:5;;;;;;;;;;;;;;;;;;;;;;;452::7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;452:19:7;;;;;;;;;;;;;;;;;;;;;;;1352:24:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1352:24:5;;;;;;;;;;;;;;;;;;;;;;;292:26:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:26:9;;;;;;;;;;;;;;;;;;;;;;;560:163:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:163:6;;;;;;1000:21:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1000:21:5;;;;;;;;;;;;;;;;;;;;;;;;;;;2523:281:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2523:281:3;;;;;;;;;;;;;;;;;;;;;;;1001:111:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:11;;;;;;3302:252:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3302:252:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1172:85:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1172:85:7;;;;;;;;;;;;;;;;;;;;;;;;;;;358:31:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:31:6;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:11;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:169:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4599:169:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:138:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1089:138:0;;;;;;262:26:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:26:9;;;;;;;;;;;;;;;;;;;;;;;541::7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;541:26:7;;;;;;;;;;;;;;;;;;;;;;;;;;;2090:277:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2090:277:3;;;;;;;;;;;;;;;;;;;;;;;1413:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1413:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;3760:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3760:252:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2551:577:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:18:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;938:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;2551:577;2614:17;2745:14;2634:9;2614:29;;2649:45;2670:12;2684:9;2649:20;:45::i;:::-;2762:26;2778:9;2762:15;:26::i;:::-;2745:43;;2827:24;2841:9;2827;;:13;;:24;;;;:::i;:::-;2815:9;:36;;;;2858:38;2875:12;2889:6;2858:16;:38::i;:::-;2946:12;2907:88;;2928:10;2907:88;;;2966:9;2983:6;2907:88;;;;;;;;;;;;;;;;;;;;;;;;3002:47;3025:12;3039:9;3002:22;:47::i;:::-;3056:15;:13;:15::i;:::-;3077:46;3099:12;3113:9;3077:21;:46::i;:::-;2551:577;;;:::o;3016:101:3:-;3065:7;3096:6;;;;;;;;;;;3089:13;;3016:101;:::o;1169:153:9:-;1211:4;1306:11;;1288:15;:29;1281:36;;1169:153;:::o;1302:19:5:-;;;;:::o;452::7:-;;;;:::o;1352:24:5:-;;;;:::o;292:26:9:-;;;;:::o;560:163:6:-;719:5:11;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;612:11:6;;;;;;;;;;;611:12;603:21;;;;;;;;638:11;:9;:11::i;:::-;630:20;;;;;;;;657:14;:12;:14::i;:::-;682:11;;;;;;;;;;714:4;700:11;;:18;;;;;;;;;;;;;;;;;;560:163::o;1000:21:5:-;;;;;;;;;;;;;:::o;2523:281:3:-;2575:4;2596:12;2642:3;2628:11;;:17;2624:136;;;2688:3;2674:11;;:17;2664:27;;2624:136;;;2742:1;2732:11;;2624:136;2782:7;2775:14;;2523:281;;:::o;1001:111:11:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;3302:252:3:-;3349:4;3370:6;3421:1;3396:21;:19;:21::i;:::-;:26;3392:124;;;3445:4;3441:8;;3392:124;;;3494:5;3490:9;;3392:124;3538:1;3531:8;;3302:252;;:::o;1172:85:7:-;1216:4;1248;;1235:9;;:17;;1228:24;;1172:85;:::o;358:31:6:-;;;;;;;;;;;;;:::o;238:20:11:-;;;;;;;;;;;;;:::o;4599:169:3:-;4695:10;4689:3;:16;4675:11;:30;;;;4741:12;4735:3;:18;4721:11;:32;;;;4599:169;;:::o;1089:138:0:-;1129:19;:17;:19::i;:::-;1158:5;;;;;;;;;;;:21;;;1180:5;;;;;;;;;;;:15;;;1196:10;1180:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1180:27:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1180:27:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1180:27:0;;;;;;;;;;;;;;;;1209:10;1158:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1158:62:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1158:62:0;;;;1089:138::o;262:26:9:-;;;;:::o;541::7:-;;;;;;;;;;;;;:::o;2090:277:3:-;2142:4;2163:11;2208:3;2194:11;;:17;2190:134;;;2253:3;2239:11;;:17;2230:26;;2190:134;;;2306:1;2297:10;;2190:134;2346:6;2339:13;;2090:277;;:::o;1413:21::-;;;;;;;;;;;;;:::o;3760:252::-;3807:4;3828:6;3879:1;3854:21;:19;:21::i;:::-;:26;3850:124;;;3903:4;3899:8;;3850:124;;;3952:5;3948:9;;3850:124;3996:1;3989:8;;3760:252;;:::o;1274:103:11:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;938:18:5:-;;;;;;;;;;;;;:::o;1504:180:9:-;499:11;;480:15;:30;;:64;;;;;533:11;;514:15;:30;;480:64;472:73;;;;;;;;1627:52;1654:12;1668:10;1627:26;:52::i;:::-;1504:180;;:::o;5569:121:5:-;5641:7;5665:20;5680:4;;5665:10;:14;;:20;;;;:::i;:::-;5658:27;;5569:121;;;:::o;1214:123:10:-;1272:9;1297:1;1293;:5;1289:9;;1316:1;1311;:6;;1304:14;;;;;;1331:1;1324:8;;1214:123;;;;:::o;4797:150:5:-;4900:42;4915:12;4929;4900:14;:42::i;:::-;4797:150;;:::o;5200:131::-;;;:::o;1629:88:7:-;1669:6;;;;;;;;;;;:14;;;1690:9;1701:10;1669:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1669:43:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1669:43:7;;;;;1629:88::o;4005:130:5:-;;;:::o;1344:197:7:-;1387:13;:11;:13::i;:::-;1383:127;;;1410:6;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1410:14:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1410:14:7;;;;1432:6;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1432:28:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1432:28:7;;;;1383:127;;;1481:6;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1481:22:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1481:22:7;;;;1383:127;1516:20;:18;:20::i;:::-;1344:197::o;936:123::-;980:11;;;;;;;;;;;972:20;;;;;;;;1007:13;:11;:13::i;:::-;1006:14;998:23;;;;;;;;1027:6;;;;;;;;;;;:15;;;1043:10;1027:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1027:27:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1027:27:7;;;;936:123::o;1512:171:11:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;3552:175:5:-;3689:1;3665:26;;:12;:26;;;;3657:35;;;;;;;;3720:1;3706:10;:15;;3698:24;;;;;;;;3552:175;;:::o;203:373:10:-;261:9;492:1;487;:6;483:35;;;510:1;503:8;;;;483:35;532:1;528;:5;524:9;;555:1;550;546;:5;;;;;;;;:10;539:18;;;;;;570:1;563:8;;203:373;;;;;:::o;503:168:8:-;626:5;;;;;;;;;;;612:25;;;638:12;652;612:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;612:53:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;612:53:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;612:53:8;;;;;;;;;;;;;;;;604:62;;;;;;;;503:168;;:::o;919:38:6:-;:::o",
  "source": "pragma solidity ^0.4.23;\n\nimport './MyCrowdsale_01.sol';\n\n/**\n* @dev This Crowdsale contract have no practical use. It is just a clean contract\n* (no state varialbles or functions) that inherents MyCrowdsale_01 (or any other)\n* and is the one that gets called by Truffle migrations. why we need it? we really\n* don't, it just looks neat to call a clean parent contract.\n*/\ncontract MyCrowdsale is MyCrowdsale_01 {\n\n  /**\n  * @dev We are getting just one external variable (MyToken) for the constructor.\n  * all the rest of variables are hard coded in \"MyCrowdsale_01\" contract.\n  * the main reason for this, is that i've faced issues wiht Java Script's Asyncronous code when i'm requesting\n  * the block number to set the time for \"start contract\" and \"contract deadline\".\n  * So as a workaround, I've included them in solidity with \"now\" and \"seconds\".\n  */\n    constructor (MyToken_01 _token) public MyCrowdsale_01(_token){\n    }\n}\n",
  "sourcePath": "/Users/ahmedalmutawa/ethereum/EventCrowd/contracts/MyCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/ahmedalmutawa/ethereum/EventCrowd/contracts/MyCrowdsale.sol",
    "exportedSymbols": {
      "MyCrowdsale": [
        111
      ]
    },
    "id": 112,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 98,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/ahmedalmutawa/ethereum/EventCrowd/contracts/MyCrowdsale_01.sol",
        "file": "./MyCrowdsale_01.sol",
        "id": 99,
        "nodeType": "ImportDirective",
        "scope": 112,
        "sourceUnit": 309,
        "src": "26:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 100,
              "name": "MyCrowdsale_01",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 308,
              "src": "397:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MyCrowdsale_01_$308",
                "typeString": "contract MyCrowdsale_01"
              }
            },
            "id": 101,
            "nodeType": "InheritanceSpecifier",
            "src": "397:14:2"
          }
        ],
        "contractDependencies": [
          39,
          308,
          573,
          621,
          735,
          760,
          847,
          1027
        ],
        "contractKind": "contract",
        "documentation": "@dev This Crowdsale contract have no practical use. It is just a clean contract\n(no state varialbles or functions) that inherents MyCrowdsale_01 (or any other)\nand is the one that gets called by Truffle migrations. why we need it? we really\ndon't, it just looks neat to call a clean parent contract.",
        "fullyImplemented": true,
        "id": 111,
        "linearizedBaseContracts": [
          111,
          308,
          760,
          39,
          735,
          621,
          1027,
          847,
          573
        ],
        "name": "MyCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "924:7:2",
              "statements": []
            },
            "documentation": "@dev We are getting just one external variable (MyToken) for the constructor.\nall the rest of variables are hard coded in \"MyCrowdsale_01\" contract.\nthe main reason for this, is that i've faced issues wiht Java Script's Asyncronous code when i'm requesting\nthe block number to set the time for \"start contract\" and \"contract deadline\".\nSo as a workaround, I've included them in solidity with \"now\" and \"seconds\".",
            "id": 110,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 106,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 103,
                    "src": "917:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyToken_01_$345",
                      "typeString": "contract MyToken_01"
                    }
                  }
                ],
                "id": 107,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 105,
                  "name": "MyCrowdsale_01",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 308,
                  "src": "902:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MyCrowdsale_01_$308_$",
                    "typeString": "type(contract MyCrowdsale_01)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "902:22:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "876:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MyToken_01_$345",
                    "typeString": "contract MyToken_01"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 102,
                    "name": "MyToken_01",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 345,
                    "src": "876:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyToken_01_$345",
                      "typeString": "contract MyToken_01"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "875:19:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "924:0:2"
            },
            "scope": 111,
            "src": "863:68:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 112,
        "src": "373:560:2"
      }
    ],
    "src": "0:934:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/ahmedalmutawa/ethereum/EventCrowd/contracts/MyCrowdsale.sol",
    "exportedSymbols": {
      "MyCrowdsale": [
        111
      ]
    },
    "id": 112,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 98,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/ahmedalmutawa/ethereum/EventCrowd/contracts/MyCrowdsale_01.sol",
        "file": "./MyCrowdsale_01.sol",
        "id": 99,
        "nodeType": "ImportDirective",
        "scope": 112,
        "sourceUnit": 309,
        "src": "26:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 100,
              "name": "MyCrowdsale_01",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 308,
              "src": "397:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MyCrowdsale_01_$308",
                "typeString": "contract MyCrowdsale_01"
              }
            },
            "id": 101,
            "nodeType": "InheritanceSpecifier",
            "src": "397:14:2"
          }
        ],
        "contractDependencies": [
          39,
          308,
          573,
          621,
          735,
          760,
          847,
          1027
        ],
        "contractKind": "contract",
        "documentation": "@dev This Crowdsale contract have no practical use. It is just a clean contract\n(no state varialbles or functions) that inherents MyCrowdsale_01 (or any other)\nand is the one that gets called by Truffle migrations. why we need it? we really\ndon't, it just looks neat to call a clean parent contract.",
        "fullyImplemented": true,
        "id": 111,
        "linearizedBaseContracts": [
          111,
          308,
          760,
          39,
          735,
          621,
          1027,
          847,
          573
        ],
        "name": "MyCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "924:7:2",
              "statements": []
            },
            "documentation": "@dev We are getting just one external variable (MyToken) for the constructor.\nall the rest of variables are hard coded in \"MyCrowdsale_01\" contract.\nthe main reason for this, is that i've faced issues wiht Java Script's Asyncronous code when i'm requesting\nthe block number to set the time for \"start contract\" and \"contract deadline\".\nSo as a workaround, I've included them in solidity with \"now\" and \"seconds\".",
            "id": 110,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 106,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 103,
                    "src": "917:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyToken_01_$345",
                      "typeString": "contract MyToken_01"
                    }
                  }
                ],
                "id": 107,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 105,
                  "name": "MyCrowdsale_01",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 308,
                  "src": "902:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MyCrowdsale_01_$308_$",
                    "typeString": "type(contract MyCrowdsale_01)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "902:22:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "876:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MyToken_01_$345",
                    "typeString": "contract MyToken_01"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 102,
                    "name": "MyToken_01",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 345,
                    "src": "876:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyToken_01_$345",
                      "typeString": "contract MyToken_01"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "875:19:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "924:0:2"
            },
            "scope": 111,
            "src": "863:68:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 112,
        "src": "373:560:2"
      }
    ],
    "src": "0:934:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x3ccb35dc5f4f12c3d063d9c4c31989787d213c05",
      "transactionHash": "0xe0650fb63170d7e6baafc844f812d68ab77abc3eb9baaa8569a740690dbb7bea"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x59517a4f4860cc2674af1f6b4903c8aca933ba56",
      "transactionHash": "0xe7ba56c4ed84d869d2480eb2bc3d75e8592458038f52c5f9433d8ff0b9d61457"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-08-14T18:14:44.570Z"
}